/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import controller.controllerRelatorioEntradaSaida;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Todosdecasa
 */
public class relatorioEntradaSaida extends javax.swing.JInternalFrame {

    /**
     * Creates new form relatorioEntradaSaida
     */
    public relatorioEntradaSaida() {
        initComponents();
        
        ListagemRelatorio();
    }
    
    public void ListagemRelatorio(){
        //cria um objeto de vendasController
        controllerRelatorioEntradaSaida controller = new  controllerRelatorioEntradaSaida();
        //capturando a lista de relatório de vendas
        List<model.relatorioEntradaSaida> lista = controller.listarRelatorios();
        
        //modelo padrão de tabela
       DefaultTableModel modeloTabela = (DefaultTableModel)tabelaRelatorio.getModel();
        
       //Limpando a tabela antes de adicionar nobvos dados
       modeloTabela.setRowCount(0);
       
       //verificar se a lista esta vazia
       if(lista !=null && !lista.isEmpty()){
           for (model.relatorioEntradaSaida reserva : lista){
               Object[] linha = {
                   reserva.getNomeMorador(),
                   reserva.getNomeFuncionario(),
                   reserva.getDataMovimentacao(),
                   reserva.getTipoMovimentacao(),
                   
   
               };//fim do objeto linha
               modeloTabela.addRow(linha);
               
           }//fim do for
       }else{
           JOptionPane.showMessageDialog(null,"Não existem Entradas ou Saídas!");
       }//fim do else
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaRelatorio = new javax.swing.JTable();
        butaoBaixarRelatorio = new javax.swing.JToggleButton();
        relatoriomensal = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaRelatorio.setBackground(new java.awt.Color(255, 255, 255));
        tabelaRelatorio.setForeground(new java.awt.Color(0, 0, 0));
        tabelaRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Morador", "Funcionário", " DataMovimentacao", "TipoMovimentacao"
            }
        ));
        jScrollPane1.setViewportView(tabelaRelatorio);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 690, 330));

        butaoBaixarRelatorio.setBackground(new java.awt.Color(255, 204, 0));
        butaoBaixarRelatorio.setForeground(new java.awt.Color(0, 0, 0));
        butaoBaixarRelatorio.setText("Baixar Relatório");
        butaoBaixarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butaoBaixarRelatorioActionPerformed(evt);
            }
        });
        jPanel1.add(butaoBaixarRelatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 130, 30));

        relatoriomensal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        relatoriomensal.setForeground(new java.awt.Color(0, 0, 0));
        relatoriomensal.setText("RELATÓRIO MENSAL");
        jPanel1.add(relatoriomensal, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butaoBaixarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butaoBaixarRelatorioActionPerformed
        String pdfPath = "RelatorioDeEntradaSaida.pdf";

    try {
        // Criando o documento
        Document documento = new Document(PageSize.A4, 50, 50, 50, 50);
        PdfWriter.getInstance(documento, new FileOutputStream(pdfPath));
        documento.open();

        // Fonte personalizada
        Font tituloFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD, BaseColor.DARK_GRAY);
        Font cabecalhoFont = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, BaseColor.WHITE);
        Font celulaFont = new Font(Font.FontFamily.HELVETICA, 11);

        // Título
        Paragraph titulo = new Paragraph("Relatório de Entrada/Saída de Moradores", tituloFont);
        titulo.setAlignment(Element.ALIGN_CENTER);
        titulo.setSpacingAfter(20);
        documento.add(titulo);

        // Data/hora
        String dataHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date());
        Paragraph data = new Paragraph("Gerado em: " + dataHora, new Font(Font.FontFamily.HELVETICA, 10, Font.ITALIC));
        data.setAlignment(Element.ALIGN_RIGHT);
        data.setSpacingAfter(10);
        documento.add(data);

        // Captura e cria tabela
        int colunas = tabelaRelatorio.getColumnCount();
        PdfPTable tabela = new PdfPTable(colunas);
        tabela.setWidthPercentage(100);
        tabela.setSpacingBefore(10f);
        tabela.setSpacingAfter(10f);

        // Cabeçalhos
        for (int i = 0; i < colunas; i++) {
            PdfPCell cell = new PdfPCell(new Phrase(tabelaRelatorio.getColumnName(i), cabecalhoFont));
            cell.setBackgroundColor(BaseColor.GRAY);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(5);
            tabela.addCell(cell);
        }

        // Corpo da tabela
        DefaultTableModel modeloTabela = (DefaultTableModel) tabelaRelatorio.getModel();
        for (int l = 0; l < modeloTabela.getRowCount(); l++) {
            for (int c = 0; c < modeloTabela.getColumnCount(); c++) {
                Object valorCelula = modeloTabela.getValueAt(l, c);
                PdfPCell cell = new PdfPCell(new Phrase(valorCelula != null ? valorCelula.toString() : "", celulaFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setPadding(4);
                tabela.addCell(cell);
            }
        }

        // Adiciona a tabela ao documento
        documento.add(tabela);
        documento.close();

        JOptionPane.showMessageDialog(this, "PDF GERADO COM SUCESSO");

        File pdffile = new File(pdfPath);
        if (pdffile.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(pdffile);
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum aplicativo suporta o PDF!");
            }
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao gerar PDF: " + e.getMessage());
    }

    }//GEN-LAST:event_butaoBaixarRelatorioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton butaoBaixarRelatorio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel relatoriomensal;
    private javax.swing.JTable tabelaRelatorio;
    // End of variables declaration//GEN-END:variables
}

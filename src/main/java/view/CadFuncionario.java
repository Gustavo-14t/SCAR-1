/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import controller.FuncionarioController;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Funcionario;

/**
 *
 * @author devmat
 */
public class CadFuncionario extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJInternalFrame
     */
    
    int idFunc;
    
    public CadFuncionario() {
        initComponents();
        //startando butões desligados
        jLabel2.setVisible(false);
        campoSenha.setVisible(false);
        butaoOcultar.setVisible(false);
        
        ListagemUsuario();
        ListagemUsuarioDelet();
       pesquisarUsuario();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     
     // Método que será chamado quando a seleção do JComboBox mudar
   public void campoCargoActionPerformed() {
        // Obtém o cargo selecionado no JComboBox
        String cargoSelecionado = (String)  boxCargo.getSelectedItem();

        // Verifica se o cargo selecionado é "coped" ou "porteiro"
        if (cargoSelecionado != null && (cargoSelecionado.equals("sindico") || cargoSelecionado.equals("porteiro"))) {
            jLabel2.setVisible(true);
        campoSenha.setVisible(true);
        butaoOcultar.setVisible(true);
            
        }else{
            jLabel2.setVisible(false);
        campoSenha.setVisible(false);
        butaoOcultar.setVisible(false);  
        }
    }
   
   public void pesquisarUsuario(){
        campoPesquisa.getDocument().addDocumentListener(
                new DocumentListener(){
            //Anotação que informa que eu nção estou escrevendo um método e sim que eu estou sobre escrevendo
            //o método atual
             @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e){
                pesquisar();
            }// fim do insertUpdate
             @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e){
                pesquisar();
            }
             @Override
         public void changedUpdate(javax.swing.event.DocumentEvent e){
                pesquisar();
         }
        private void pesquisar (){
            ListagemUsuarioN(campoPesquisa.getText());
        }//fim do método pesquisar
        });//fim do método de captura
    }//fim do método PesquisarUsuario
   
   public void ListagemUsuarioN(String nomeUsuario){
        
        // chamando o produtos controller
        FuncionarioController controller = new FuncionarioController();
        // capturando a lista de produtos que vem do banco de dados
        List<Funcionario> listausuario = controller.listarUsuarioNome(nomeUsuario);
        
        // Obtendo o modelo da tabela
        DefaultTableModel modeloTabela = 
                (DefaultTableModel) tabelaFuncionario2.getModel();
    
    // Limpando a tabela antes de adicionar novos dados
       modeloTabela.setRowCount(0);
    
    // Verificando se a lista não é nula
    if (listausuario != null && !listausuario.isEmpty()) {
        // Jogando os dados para dentro da minha tabela
        for (Funcionario funcionario : listausuario) {
            // Criando uma nova linha para a tabela
            Object[] linha = {
                funcionario.getId_funcionario(),
                funcionario.getNome(),
                funcionario.getCpf(),
                funcionario.getTelefone(),
                funcionario.getEndereco(),
                funcionario.getDepartamento(),
            };
            // Adicionando a linha ao modelo da tabela
            modeloTabela.addRow(linha);
        }
    } else {
        JOptionPane.showMessageDialog
        (this, "Nenhum produto encontrado.");
    }
}// fim do metodo ListagemUsuarioN()
   
    
   public void limparCampos(){
        campoNome.setText("");
         campoCpf.setText("");
         campoTelefone.setText("");
         campoEndereco.setText("");
         boxCargo.setSelectedIndex(-1);
         campoSenha.setText("");
                
    }
   
   public void ListagemUsuarioDelet(){
    
        
        // chamando o produtos controller
        FuncionarioController controller = new FuncionarioController();
        // capturando a lista de produtos que vem do banco de dados
        List<Funcionario> listaFuncionario= controller.listarUsuario();
        
        // Obtendo o modelo da tabela
        DefaultTableModel modeloTabela = 
                (DefaultTableModel) tabelaFuncionario2.getModel();
    
    // Limpando a tabela antes de adicionar novos dados
       modeloTabela.setRowCount(0);
    
    // Verificando se a lista não é nula
    if (listaFuncionario != null && !listaFuncionario.isEmpty()) {
        // Jogando os dados para dentro da minha tabela
        for (Funcionario funcionario : listaFuncionario) {
            // Criando uma nova linha para a tabela
            Object[] linha = {
               funcionario.getId_funcionario(),
                funcionario.getNome(),
                funcionario.getCpf(),
                funcionario.getTelefone(),
                funcionario.getEndereco(),
                funcionario.getDepartamento(),
            };
            // Adicionando a linha ao modelo da tabela
            modeloTabela.addRow(linha);
        }
    } else {
        JOptionPane.showMessageDialog
        (this, "Nenhum Cliente encontrado.");
    }
       
 }//fim do método de listagemUsuarioP()
   
   
   public void ListagemUsuario(){
        
        // chamando o produtos controller
        FuncionarioController controller = new FuncionarioController();
        // capturando a lista de produtos que vem do banco de dados
        List<Funcionario> listaFuncionario= controller.listarUsuario();
        
        // Obtendo o modelo da tabela
        DefaultTableModel modeloTabela = 
                (DefaultTableModel) tabelaFuncionario.getModel();
    
    // Limpando a tabela antes de adicionar novos dados
       modeloTabela.setRowCount(0);
    
    // Verificando se a lista não é nula
    if (listaFuncionario != null && !listaFuncionario.isEmpty()) {
        // Jogando os dados para dentro da minha tabela
        for (Funcionario funcionario : listaFuncionario) {
            // Criando uma nova linha para a tabela
            Object[] linha = {
                funcionario.getId_funcionario(),
                funcionario.getNome(),
                funcionario.getCpf(),
                funcionario.getTelefone(),
                funcionario.getEndereco(),
                funcionario.getDepartamento(),
                
            };
            // Adicionando a linha ao modelo da tabela
            modeloTabela.addRow(linha);
        }
    } else {
        JOptionPane.showMessageDialog
        (this, "Nenhum Cliente encontrado.");
    }
        }//fim do método ListagemUsuario()
   
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        campoTelefone = new javax.swing.JTextField();
        campoNome = new javax.swing.JTextField();
        campoEndereco = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        boxCargo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        bCadastrar = new javax.swing.JToggleButton();
        butaoOcultar = new javax.swing.JButton();
        campoSenha = new javax.swing.JPasswordField();
        campoCpf = new javax.swing.JFormattedTextField();
        cadFunc = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        campoPesquisa = new javax.swing.JTextField();
        tabelaFuncDel = new javax.swing.JScrollPane();
        tabelaFuncionario2 = new javax.swing.JTable();
        bdelet = new javax.swing.JToggleButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CARGO:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 60, 20));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("SENHA:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 50, 20));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("CPF:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, 20));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("TELEFONE:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, 20));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("ENDEREÇO:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 140, 20));

        campoTelefone.setBackground(new java.awt.Color(255, 255, 255));
        campoTelefone.setForeground(new java.awt.Color(0, 0, 0));
        campoTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTelefoneActionPerformed(evt);
            }
        });
        jPanel2.add(campoTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 250, 35));

        campoNome.setBackground(new java.awt.Color(255, 255, 255));
        campoNome.setForeground(new java.awt.Color(0, 0, 0));
        campoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeActionPerformed(evt);
            }
        });
        jPanel2.add(campoNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 250, 35));

        campoEndereco.setBackground(new java.awt.Color(255, 255, 255));
        campoEndereco.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(campoEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 250, 35));

        tabelaFuncionario.setBackground(new java.awt.Color(255, 255, 255));
        tabelaFuncionario.setForeground(new java.awt.Color(0, 0, 0));
        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "CPF", "TELEFONE", "ENDEREÇO", "DEPARTAMENTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaFuncionario);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 710, 150));

        boxCargo.setBackground(new java.awt.Color(255, 255, 255));
        boxCargo.setForeground(new java.awt.Color(0, 0, 0));
        boxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "guarda", "porteiro", "sindico", "zelador", "jardineiro", " " }));
        boxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCargoActionPerformed(evt);
            }
        });
        jPanel2.add(boxCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 210, 35));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("NOME:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 20));

        bCadastrar.setBackground(new java.awt.Color(255, 204, 0));
        bCadastrar.setForeground(new java.awt.Color(0, 0, 0));
        bCadastrar.setText("CADASTRAR");
        bCadastrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarActionPerformed(evt);
            }
        });
        jPanel2.add(bCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 110, 40));

        butaoOcultar.setBackground(new java.awt.Color(187, 187, 187));
        butaoOcultar.setBorder(null);
        butaoOcultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butaoOcultarActionPerformed(evt);
            }
        });
        jPanel2.add(butaoOcultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 50, 35));

        campoSenha.setBackground(new java.awt.Color(255, 255, 255));
        campoSenha.setForeground(new java.awt.Color(0, 0, 0));
        campoSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSenhaActionPerformed(evt);
            }
        });
        jPanel2.add(campoSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 160, 35));

        campoCpf.setBackground(new java.awt.Color(255, 255, 255));
        campoCpf.setForeground(new java.awt.Color(0, 0, 0));
        try {
            campoCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(campoCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 250, 35));

        jTabbedPane1.addTab("Cadastrar", jPanel2);

        cadFunc.setBackground(new java.awt.Color(255, 204, 0));
        cadFunc.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("PESQUISAR");
        cadFunc.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        campoPesquisa.setBackground(new java.awt.Color(255, 255, 255));
        campoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPesquisaActionPerformed(evt);
            }
        });
        cadFunc.add(campoPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 310, 35));

        tabelaFuncionario2.setBackground(new java.awt.Color(255, 255, 255));
        tabelaFuncionario2.setForeground(new java.awt.Color(0, 0, 0));
        tabelaFuncionario2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "CPF", "TELEFONE", "ENDERECO", "DEPARTAMENTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaFuncionario2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaFunc1MouseClicked(evt);
            }
        });
        tabelaFuncDel.setViewportView(tabelaFuncionario2);

        cadFunc.add(tabelaFuncDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 690, 310));

        bdelet.setBackground(new java.awt.Color(255, 204, 0));
        bdelet.setForeground(new java.awt.Color(0, 0, 0));
        bdelet.setText("Deletar");
        bdelet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bdelet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeletActionPerformed(evt);
            }
        });
        cadFunc.add(bdelet, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 110, 30));

        jTabbedPane1.addTab("Deletar", cadFunc);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, -5, 720, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPesquisaActionPerformed

    private void butaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:

        try{
       FuncionarioController controller = new FuncionarioController();
         // criando um objeto do tipo usuario da pasta model
            Funcionario user = new Funcionario(
                campoNome.getText(),
                campoCpf.getText(),
                campoTelefone.getText(),
                campoEndereco.getText(),
                boxCargo.getSelectedItem().toString(),
                campoSenha.getText()   
            );
            
                // chamando o metodo de cadastrar o usuario no banco de dados
            controller.cadastroUsuario(user);
            JOptionPane.showMessageDialog
            (null,"Usuario Cadastrado com Sucesso!");

            ListagemUsuario();  
            ListagemUsuarioDelet();  
            limparCampos();

        }catch(Exception e){
             JOptionPane.showMessageDialog
            (null,"Usuario Não Cadastrado! "+e);
        }
    }                                          


    private void campoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeActionPerformed

    private void bdeletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeletActionPerformed
        // TODO add your handling code here:
         FuncionarioController controller = new FuncionarioController();

        try{
            controller.deletarFuncionario (this.idFunc);
            JOptionPane.showMessageDialog(null,"Usuario excluído com sucesso");

             ListagemUsuarioDelet();
             ListagemUsuario();
           campoPesquisa.setText("");
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null,"Erro ao excluir o Funcionario "+ erro);
        }                                      

    }//GEN-LAST:event_bdeletActionPerformed


    private void campoTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTelefoneActionPerformed

    private void boxCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCargoActionPerformed
        // TODO add your handling code here:
        campoCargoActionPerformed();
    }//GEN-LAST:event_boxCargoActionPerformed
boolean oculto = false;
    private void butaoOcultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butaoOcultarActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
         if (oculto) {
        campoSenha.setEchoChar((char) 0); // Exibe a senha
        oculto = false;
        butaoOcultar.setIcon(new ImageIcon("C:/Users/devmat/Documents/NetBeansProjects/SCAR/SCAR-1/src/main/java/img/escondido.png")); // Ajuste o caminho correto
    } else {
        campoSenha.setEchoChar('\u2022'); // Oculta a senha
        oculto = true;
        butaoOcultar.setIcon(new ImageIcon("C:/Users/devmat/Documents/NetBeansProjects/SCAR/SCAR-1/src/main/java/img/visualizar.png")); // Ajuste o caminho correto
    }
    }//GEN-LAST:event_butaoOcultarActionPerformed

    private void campoSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoSenhaActionPerformed

    private void tabelaFunc1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFunc1MouseClicked
        // TODO add your handling code here:7
        int linhaSelecionada = tabelaFuncionario2.getSelectedRow();

        //verificando se alguam linha foi selecionada
        if(linhaSelecionada>=0){
            //definir modelo default para a tabela
            DefaultTableModel modeloTabela =
            (DefaultTableModel) tabelaFuncionario2.getModel();

            //jogando os dados da tabela para os campos de texto
            idFunc = Integer.parseInt(modeloTabela.getValueAt(linhaSelecionada, 0).toString());
            campoNome.setText(
                modeloTabela.getValueAt(linhaSelecionada,1).toString());
            campoCpf.setText(
                modeloTabela.getValueAt(linhaSelecionada,2).toString());
            campoTelefone.setText(
                modeloTabela.getValueAt(linhaSelecionada,3).toString());
            campoEndereco.setText(
                modeloTabela.getValueAt(linhaSelecionada,4).toString());
            boxCargo.setSelectedItem(
                modeloTabela.getValueAt(linhaSelecionada,5).toString());

        }//fim do if   
    }//GEN-LAST:event_tabelaFunc1MouseClicked

    private void bCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarActionPerformed
        // TODO add your handling code here:
        if(campoNome.getText().isEmpty() || campoCpf.getText().isEmpty() || campoTelefone.getText().isEmpty() || campoEndereco.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }else{
        
        try{
       FuncionarioController controller = new FuncionarioController();
         // criando um objeto do tipo usuario da pasta model
            Funcionario user = new Funcionario(
                campoNome.getText(),
                campoCpf.getText(),
                campoTelefone.getText(),
                campoEndereco.getText(),
                boxCargo.getSelectedItem().toString(),
                campoSenha.getText()   
            );
            
                // chamando o metodo de cadastrar o usuario no banco de dados
            controller.cadastroUsuario(user);
            JOptionPane.showMessageDialog
            (null,"Usuario Cadastrado com Sucesso!");

            ListagemUsuario();  
            ListagemUsuarioDelet();  
            limparCampos();

        }catch(Exception e){
             JOptionPane.showMessageDialog
            (null,"Usuario Não Cadastrado! "+e);
        }
        }
    }//GEN-LAST:event_bCadastrarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bCadastrar;
    private javax.swing.JToggleButton bdelet;
    private javax.swing.JComboBox<String> boxCargo;
    private javax.swing.JButton butaoOcultar;
    private javax.swing.JPanel cadFunc;
    private javax.swing.JFormattedTextField campoCpf;
    private javax.swing.JTextField campoEndereco;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoPesquisa;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JTextField campoTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane tabelaFuncDel;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JTable tabelaFuncionario2;
    // End of variables declaration//GEN-END:variables
}
